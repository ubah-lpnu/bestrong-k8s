trigger:
  branches:
    include:
    - master
    - develop
    - refs/tags/*

pool: 
  vmImage: 'ubuntu-18.04'

variables:
  isMaster: $[eq(variables['Build.SourceBranchName'], 'master')]
  isPR: $[eq(variables['Build.Reason'], 'PullRequest')]
  isDevelop: $[eq(variables['Build.SourceBranchName'], 'develop')]
  isTag: $[contains(variables['Build.SourceBranch'], 'refs/tags/')]

# https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops&tabs=yaml
stages:
  - stage: stg
    variables:
      System.Debug: tue
    displayName: "Print predefined variables stage"
    jobs:
      - job: stg
        workspace:
          clean: all
        displayName: "Print predefined variables job"
        condition: or(eq(variables.isDevelop, true), eq(variables.isTag, true))
        steps:
          - bash: |
              echo "Agent.BuildDirectory: $(Agent.BuildDirectory)"
              echo "Agent.ContainerMapping: $(Agent.ContainerMapping)"
              echo "Agent.HomeDirectory: $(Agent.HomeDirectory)"
              echo "Agent.Id: $(Agent.Id)"
              echo "Agent.JobName: $(Agent.JobName)"
              echo "Agent.JobStatus: $(Agent.JobStatus)"
              echo "Agent.MachineName: $(Agent.MachineName)"
              echo "Agent.Name: $(Agent.Name)"
              echo "Agent.OS: $(Agent.OS)"
              echo "Agent.OSArchitecture: $(Agent.OSArchitecture)"
              echo "Agent.TempDirectory: $(Agent.TempDirectory)"
              echo "Agent.ToolsDirectory: $(Agent.ToolsDirectory)"
              echo "Agent.WorkFolder: $(Agent.WorkFolder)"
              echo "Build.ArtifactStagingDirectory: $(Build.ArtifactStagingDirectory)"
              echo "Build.BuildId: $(Build.BuildId)"
              echo "Build.BuildNumber: $(Build.BuildNumber)"
              echo "Build.BuildUri: $(Build.BuildUri)"
              echo "Build.BinariesDirectory: $(Build.BinariesDirectory)"
              echo "Build.ContainerId: $(Build.ContainerId)"
              echo "Build.DefinitionName: $(Build.DefinitionName)"
              echo "Build.DefinitionVersion: $(Build.DefinitionVersion)"
              echo "Build.QueuedBy: $(Build.QueuedBy)"
              echo "Build.QueuedById: $(Build.QueuedById)"
              echo "Build.Reason: $(Build.Reason)"
              echo "Build.Repository.Clean: $(Build.Repository.Clean)"
              echo "Build.Repository.LocalPath: $(Build.Repository.LocalPath)"
              echo "Build.Repository.ID: $(Build.Repository.ID)"
              echo "Build.Repository.Name: $(Build.Repository.Name)"
              echo "Build.Repository.Provider: $(Build.Repository.Provider)"
              echo "Build.Repository.Tfvc.Workspace: $(Build.Repository.Tfvc.Workspace)"
              echo "Build.Repository.Uri: $(Build.Repository.Uri)"
              echo "Build.RequestedFor: $(Build.RequestedFor)"
              echo "Build.RequestedForEmail: $(Build.RequestedForEmail)"
              echo "Build.RequestedForId: $(Build.RequestedForId)"
              echo "Build.SourceBranch: $(Build.SourceBranch)"
              echo "Build.SourceBranchName: $(Build.SourceBranchName)"
              echo "Build.SourcesDirectory: $(Build.SourcesDirectory)"
              echo "Build.SourceVersion: $(Build.SourceVersion)"
              echo "Build.SourceVersionMessage: $(Build.SourceVersionMessage)"
              echo "Build.StagingDirectory: $(Build.StagingDirectory)"
              echo "Build.Repository.Git.SubmoduleCheckout: $(Build.Repository.Git.SubmoduleCheckout)"
              echo "Build.SourceTfvcShelveset: $(Build.SourceTfvcShelveset)"
              echo "Build.TriggeredBy.BuildId: $(Build.TriggeredBy.BuildId)"
              echo "Build.TriggeredBy.DefinitionId: $(Build.TriggeredBy.DefinitionId)"
              echo "Build.TriggeredBy.DefinitionName: $(Build.TriggeredBy.DefinitionName)"
              echo "Build.TriggeredBy.BuildNumber: $(Build.TriggeredBy.BuildNumber)"
              echo "Build.TriggeredBy.ProjectID: $(Build.TriggeredBy.ProjectID)"
              echo "Common.TestResultsDirectory: $(Common.TestResultsDirectory)"
              echo "Pipeline.Workspace: $(Pipeline.Workspace)"
              echo "Environment.Name: $(Environment.Name)"
              echo "Environment.Id: $(Environment.Id)"
              echo "Environment.ResourceName: $(Environment.ResourceName)"
              echo "Environment.ResourceId: $(Environment.ResourceId)"
              echo "System.AccessToken: $(System.AccessToken)"
              echo "System.CollectionId: $(System.CollectionId)"
              echo "System.CollectionUri: $(System.CollectionUri)"
              echo "System.DefaultWorkingDirectory: $(System.DefaultWorkingDirectory)"
              echo "System.DefinitionId: $(System.DefinitionId)"
              echo "System.HostType: $(System.HostType)"
              echo "System.JobAttempt: $(System.JobAttempt)"
              echo "System.JobDisplayName: $(System.JobDisplayName)"
              echo "System.JobId: $(System.JobId)"
              echo "System.JobName: $(System.JobName)"
              echo "System.PhaseAttempt: $(System.PhaseAttempt)"
              echo "System.PhaseDisplayName: $(System.PhaseDisplayName)"
              echo "System.PhaseName: $(System.PhaseName)"
              echo "System.StageAttempt: $(System.StageAttempt)"
              echo "System.StageDisplayName: $(System.StageDisplayName)"
              echo "System.StageName: $(System.StageName)"
              echo "System.PullRequest.IsFork: $(System.PullRequest.IsFork)"
              echo "System.PullRequest.PullRequestId: $(System.PullRequest.PullRequestId)"
              echo "System.PullRequest.PullRequestNumber: $(System.PullRequest.PullRequestNumber)"
              echo "System.PullRequest.SourceBranch: $(System.PullRequest.SourceBranch)"
              echo "System.PullRequest.SourceRepositoryURI: $(System.PullRequest.SourceRepositoryURI)"
              echo "System.PullRequest.TargetBranch: $(System.PullRequest.TargetBranch)"
              echo "System.TeamFoundationCollectionUri: $(System.TeamFoundationCollectionUri)"
              echo "System.TeamProject: $(System.TeamProject)"
              echo "System.TeamProjectId: $(System.TeamProjectId)"
              echo "TF_BUILD: $(TF_BUILD)"
            displayName: "Print predefined variables step"